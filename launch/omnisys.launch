<launch>

    <!--Baxter URDF-->
    <arg name="baxter_urdf" value="robot_description"/>
    <param name="$(arg baxter_urdf)" textfile="$(find telehaptics)/urdf/baxter.urdf"/>

    <!--OMNI Files-->
    <!-- omni1 node publishes joint states on omni1_joint_states -->
    <node name="omni1" pkg="phantom_omni" type="omni" output="screen" />

  	<!-- robot_description tells robot_state_publisher where to find the omni's urdf description -->
    <param name="omni_robot_description" command="cat $(find omni_description)/urdf/omni.urdf" />

  	<!-- robot_state_publisher reads omni1_joint_states and publishes corresponding tfs -->
    <node name="omni1_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
  	  <remap from="joint_states" to="omni1_joint_states" />
  	  <remap from="robot_description" to="omni_robot_description" />
      <param name="tf_prefix" value="omni"/>
  	</node>

    <!--Connects OMNI and Baxter tf trees-->
    <node name="omni_to_baxter_connect" pkg="tf" type="static_transform_publisher" args="1 0.5 0 0.0 0 0 /base /omni/base 100"/>

    <!--Rviz-->
    <node name="rviz" pkg="rviz" type="rviz" output="screen"/>

    <!--OMNI pose publishing node-->
    <node name="omni_reference_pose_generator" pkg="telehaptics" type="omni_reference_targets2.py" output="screen"/>

    <!--Bare velocity controller node-->
    <!-- <node name="velocity_control" pkg="telehaptics" type="velocity_control.py" output="screen"/> -->

    <!--OMNI gripper control node-->
    <node name="omni_gripper_open_close" pkg="telehaptics" type="omni_gripper_control.py" />

</launch>
